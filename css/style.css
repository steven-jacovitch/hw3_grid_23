html {
  scroll-behavior: smooth;
}

body {
  background-color: #737373;
  font-size: 18px;
  line-height: 1.15;
  margin: 0;
  padding: 0;
}


.overview {
  background-attachment: fixed;
  /* Parallax effect */
  background-position: center;
  /* Parallax effect */
  background-repeat: no-repeat;
  /* Parallax effect */
  background-size: cover;
  /* Parallax effect */
  color: white;
  height: 400px;
  /* Parallax effect */
}


.overview p {
  color: white;
  font-size: 24px;
  padding: 0 100px;
  text-align: center;
}

h1 {
  font-size: 50px;
  line-height: 1;
  padding: 50px 0;
  text-align: center;
}

h2 {
  font-size: 32px;
  line-height: 1.5;
}

nav li {
  display: inline;
  padding-right: 20px;

}

nav a {
  color: black;
  font-weight: bold;
  text-decoration: none;
}


.skip a {
  background: white;
  left: 0;
  padding: 6px;
  -webkit-transition: top 1s ease-out;
  transition: top 1s ease-out;
  z-index: 1;
}


nav {
  background-color: #ddd;
  padding: 25px 0;
  text-align: left;
}

footer {
  background-color: black;
  color: white;
  padding-top: 30px;
  text-align: center;
}


.text-block {
  background-color: rgba(255, 255, 255, .8);
  border: 10px solid black;
  padding: 30px;
}


@media screen and (prefers-reduced-motion: reduce) {
  html {
    scroll-behavior: auto;
    /* Removes scroll animation */
  }

  .skip a {
    -webkit-transition: none;
    /* sets to default setting */
    transition: none;
    /* sets to default setting */
  }

  /*Turn off parallax*/
  header {
    background-attachment: initial;
  }
}



/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/

nav a:hover {
  text-decoration: underline;
}

nav a:focus {
  text-decoration: underline;
}

/* Step 2a: Write selector/rule property to position the default position for the skip class element*/
/*The link is positioned 40px above the top of its parent element (it is hidden by default).*/
.skip a {
  position: absolute;
  top: -40px;
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/
/* 20 px below the top of its parent */

.skip a:focus {
  position: absolute;
  top: 20px;
}

/* Step 3: Write selector/rule property to style all elements when in focus*/

*:focus {
  border: 2px solid black;
}

/* Step 4: Write selector/rule property to style the container */
/* .container class uses grid:
Three columns: 1fr 5fr 1fr
Gap of 15px between rows; */


.container {
  display: grid;
  width: 100%;
  grid-template-columns: 1fr 5fr 1fr;
  gap: 15px;
}

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */

/* The first child of the container should
Take up  all of the columns
Use the header.jpg file as a non-repeating background image with parallax effect
You can NOT assume that the .overview class will always be the first child.   */

.container div:first-child {
  grid-column: 1 / -1;
  background-image: url("../images/header.jpg");
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */

/*This will be a lot of rules.... but be strategic and combine seletors*/


/* The classes .about, .method, .clients, and .contact:
Begin in 2nd column and span one column
Begin on the 2nd, 3rd, 4th and 5th rows respectively. */

.about {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}

.method {
  grid-column: 2 / 3;
  grid-row: 3 / 4;
}

.clients {
  grid-column: 2 / 3;
  grid-row: 4 / 5;
}

.contact {
  grid-column: 2 / 3;
  grid-row: 5 / 6;
}

/* The .about-image, .method-image, .clients-image,   and .contact-image elements:
Cover all of the columns.
Have a maximum height of 600px
Hide any content that goes outside their grid cell. 
Begin on the 2nd, 3rd, 4th and 5th row respectively. */

.about-image {
  grid-column: 1 / -1;
  max-height: 600px;
  overflow: hidden;
  grid-row: 2 / 3;
}

.method-image {
  grid-column: 1 / -1;
  max-height: 600px;
  overflow: hidden;
  grid-row: 3 / 4;
}

.clients-image {
  grid-column: 1 / -1;
  max-height: 600px;
  overflow: hidden;
  grid-row: 4 / 5;
}

.contact-image {
  grid-column: 1 / -1;
  max-height: 600px;
  overflow: hidden;
  grid-row: 5 / 6;
}

/* Step 8: Write the selector/rule property to style the .text-block class. */

/* The .text-block class:
Is centered horizontally and vertically with centered text. */

.text-block {
  text-align: center;
  margin: auto;
}

/* Add your media query here */
/* 800 px */


/* Step 9: Write the selector/rule property to style the nav element */
/* Move the navigation so that the nav is aligned to the other side of the window and has a padding of 30px on the top and bottom and 0 on the left and right. */

@media screen and (min-width: 800px) {
  nav {
    text-align: right;
    padding: 30px 0 30px 0;
  }
}


/* Step 10: Write the selector/rule property to update the .container class */
/* The .container class uses grid with
Five columns: 50px, auto, 500px, auto, and  50px */


@media screen and (min-width: 800px) {
  .container {
    display: grid;
    grid-template-columns: 50px auto 500px auto 50px;
  }
}


/* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/

/* The .about, .clients, .method-image, .contact-image:
Begin in the third column and span two columns */


@media screen and (min-width: 800px) {
  .about {
    grid-column: 3 / span 2;
  }

  .clients {
    grid-column: 3 / span 2;
  }

  .method-image {
    grid-column: 3 / span 2;
  }

  .contact-image {
    grid-column: 3 / span 2;
  }
}

/* The .method, .contact, .about-image, and .clients-image:
Begin in the second column and span two columns. */


@media screen and (min-width: 800px) {
  .method {
    grid-column: 2 / span 2;
  }

  .contact {
    grid-column: 2 / span 2;
  }

  .about-image {
    grid-column: 2 / span 2;
  }

  .clients-image {
    grid-column: 2 / span 2;
  }
}



/* Step 13:Write the selector/rule property to update the .text-block class */

/* The .text-block class:
Has  maximum height of  250px
Ensures that  any content that goes outside their grid cell is still reachable.  */


@media screen and (min-width: 800px) {
  .text-block {
    max-height: 250px;
    overflow: auto;
  }
}